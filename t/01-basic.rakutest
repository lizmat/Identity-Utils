use Test;
use Identity::Utils;

plan 24;

my $short-name = "Foo::Bar";
my $ver        = "0.0.42";
my $version    = $ver.Version;
my $ecosystem  = "zef";
my $nick       = "lizmat";
my $auth       = "$ecosystem:$nick";
my $api        = "2.0";
my $identity   = $short-name ~ ":ver<$ver>:auth<$auth>:api<$api>";

is build($short-name, :$ver, :$auth, :$api), $identity, 'is build ok?';

my @parts = ":ver<$ver>", ":auth<$auth>", ":api<$api>";
for @parts.combinations -> @combinations {
    my $long-name = "$short-name@combinations.join('')";
    is short-name($long-name), $short-name, "is short-name of $long-name ok?";
}

for @parts.permutations -> @permuted {
    my $long-name = "$short-name@permuted.join('')";
    is sanitize($long-name), $identity, "is sanitize of $long-name ok?";
}

is ver($identity),            $ver,       'is ver ok?';
is-deeply version($identity), $version,   'is version ok?';
is auth($identity),           $auth,      'is auth ok?';
is ecosystem($identity),      $ecosystem, 'is ecosystem ok?';
is nick($identity),           $nick,      'is nick ok?';
is api($identity),            $api,       'is api ok?';

is without-api($identity),  $short-name ~ ":ver<$ver>:auth<$auth>",
  'is without-api ok?';
is without-auth($identity), $short-name ~ ":ver<$ver>:api<$api>",
  'is without-auth ok?';
is without-ver($identity),  $short-name ~ ":auth<$auth>:api<$api>",
  'is without-ver ok?';

# vim: expandtab shiftwidth=4
